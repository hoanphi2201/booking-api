class BaseCamelKey:
    mapping = {}

    @classmethod
    def reverse_to_snake_key(cls, **camel_key_data):
        result = {}
        for key, value in cls.mapping.items():
            if value in camel_key_data:
                result[key] = camel_key_data[value]

        return result


class HotelCamelKey(BaseCamelKey):
    mapping = {
        'is_active': 'isActive',
        'city_or_province': 'cityOrProvince',
        'room_types': 'roomTypes',
        'check_in': 'checkin',
        'check_out': 'checkout',
        'phone_number': 'phoneNumber',
        'price_standard': 'priceStandard',
        'available_room_standard': 'availableRoomStandard',
        'tax_standard': 'taxStandard',
        'image_standard': 'imageStandard',
        'price_deluxe': 'priceDeluxe',
        'available_room_deluxe': 'availableRoomDeluxe',
        'tax_deluxe': 'taxDeluxe',
        'image_deluxe': 'imageDeluxe',
        'created_at': 'createdAt',
        'updated_at': 'updatedAt',
        'bank_code': 'bankCode',
        'hotel_id': 'hotelId',
        'account_number': 'accountNumber',
        'account_name': 'accountName'
    }


class TerminalCamelKey(BaseCamelKey):
    mapping = {
        'id': 'id',
        'code': 'code',
        'name': 'name',
        'type': 'type',
        'platform': 'platform',
        'is_requested_approval': 'isRequestedApproval',
        'province_code': 'provinceCode',
        'district_code': 'districtCode',
        'ward_code': 'wardCode',
        'province_name': 'provinceName',
        'district_name': 'districtName',
        'ward_name': 'wardName',
        'street_address': 'streetAddress',
        'full_address': 'fullAddress',
        'seller_id': 'sellerID',
        'note': 'note',
        'is_active': 'isActive',
        'created_at': 'createdAt',
        'updated_at': 'updatedAt',
        'delivery_methods': 'deliveryMethods',
        'digital_tag': 'digitalTag'
    }


class ProtobufTerminalCamelKey(BaseCamelKey):
    mapping = {
        'id': 'id',
        'code': 'code',
        'name': 'name',
        'type': 'type',
        'platform': 'platform',
        'is_requested_approval': 'isRequestedApproval',
        'province_code': 'provinceCode',
        'district_code': 'districtCode',
        'ward_code': 'wardCode',
        'province_name': 'provinceName',
        'district_name': 'districtName',
        'ward_name': 'wardName',
        'street_address': 'streetAddress',
        'full_address': 'fullAddress',
        'seller_id': 'sellerId',
        'note': 'note',
        'is_active': 'isActive',
        'created_at': 'createdAt',
        'updated_at': 'updatedAt',
        'delivery_methods': 'deliveryMethods'
    }


class ProtobufSellerCamelKey(BaseCamelKey):
    mapping = {
        'id': 'id',
        'code': 'code',
        'is_active': 'isActive',
        'name': 'name',
        'international_name': 'internationalName',
        'brc_code': 'brcCode',
        'brc_date': 'brcDate',
        'tax_id_number': 'taxIdNumber',
        'founding_date': 'foundingDate',
        'display_name': 'displayName',
        'full_address': 'fullAddress',
        'phone_number': 'phoneNumber',
        'email': 'email',
        'province_code': 'provinceCode',
        'district_code': 'districtCode',
        'ward_code': 'wardCode',
        'province_name': 'provinceName',
        'district_name': 'districtName',
        'ward_name': 'wardName',
        'sale_category_ids': 'saleCategoryIds',
        'street_address': 'streetAddress',
        'service_package': 'servicePackage',
        'logo_url': 'logoUrl',
        'slogan': 'slogan',
        'is_auto_generated_sku': 'isAutoGeneratedSku',
        'using_goods_management_modules': 'usingGoodsManagementModules',
        'created_at': 'createdAt',
        'updated_at': 'updatedAt'
    }


class DeliveryMethodsCamelKey(BaseCamelKey):
    mapping = {
        'hand_over': 'handOver',
        'pickup_counter': 'pickupCounter',
        'home_delivery': 'homeDelivery'
    }


class SellersTerminalsCamelKey(BaseCamelKey):
    mapping = {
        'id': 'id',
        'seller_id': 'sellerID',
        'terminal_id': 'terminalID',
        'is_owner': 'isOwner',
        'is_requested_approval': 'isRequestedApproval',
        'is_requested_approval_exception': 'isRequestedApprovalException',
        'seller_name': 'sellerName',
        'created_at': 'createdAt',
        'updated_at': 'updatedAt'
    }


class ProtobufSellersTerminalsCamelKey(BaseCamelKey):
    mapping = {
        'id': 'id',
        'seller_id': 'sellerId',
        'terminal_id': 'terminalId',
        'is_owner': 'isOwner',
        'is_requested_approval': 'isRequestedApproval',
        'is_requested_approval_exception': 'isRequestedApprovalException',
        'seller_name': 'sellerName',
        'created_at': 'createdAt',
        'updated_at': 'updatedAt'
    }


class WarehouseCamelKey(BaseCamelKey):
    mapping = {
        'warehouse_name': 'warehouseName',
        'warehouse_code': 'warehouseCode',
        'warehouse_full_address': 'warehouseFullAddress'
    }


class GlobalCamelKey(BaseCamelKey):
    mapping = {}

    for cls in [HotelCamelKey, TerminalCamelKey, DeliveryMethodsCamelKey, SellersTerminalsCamelKey]:
        for key, value in cls.mapping.items():
            if not mapping.get(key):
                mapping[key] = value
